# -*- coding: utf-8 -*-
"""greedy_best_first.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mX8L9K6pxEWonpDz2_SlGwRZONNVsh27
"""

from queue import PriorityQueue

def greedy_search(graf, start, goal):
  frontier = PriorityQueue()
  frontier.put(start, 0)
  explored = set()

  while not frontier.empty():
    current_node = frontier.get()

    if current_node == goal:
      print("Simpul tujuan sudah ditemukan!")
      return True

    explored.add(current_node)

    for neighbour in grafh[current_node]:
      if neighbour not in explored:
        priority = heuristic[neighbour]
        frontier.put(neighbour, priority)

  print("simpul tujuan tidak ditemukan!")
  return False

heuristic = {
    'A' : 9,
    'B' : 4,
    'C' : 2,
    'D' : 5,
    'E' : 3,
    'S' : 7,
    'G' : 0,
}

grafh = {
    'S' : {'A', 'E'},
    'A' : {'B', 'C'},
    'B' : {'D'},
    'C' : {'G'},
    'D' : {'G'},
    'E' : {'D'}
}

start_node ='S'
goal_node = 'G'

greedy_search(grafh, start_node, goal_node)